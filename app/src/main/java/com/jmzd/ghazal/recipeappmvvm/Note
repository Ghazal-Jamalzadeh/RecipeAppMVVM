توضیح کتابخانه های اضافه شده به پروژه--------------------------------------------------------------
# Calligraphy :
اگر خاطرتون باشه توی فصل های قبلی موقع اضافه کردن فونت تک تک توی تمام ویوها اضافه میکردیم
ولی اضافه شدن فونت توی توست و منوها کلا دردسره
با این کتابخونه یک بار یک کد مختصری میزنیم دیگه نیازی به ست کردن فونت روی تک تک المان ها نیست
خودش به صورت خودکار میاد به بهترین شکل فونت رو توی پروژه ست میکنه

# shimmer :
برای lazy loading استفاده میکنیم

# lottie :
کتابخانه خیلی قدرتمند و خفن
 برای اینکه بتونیم یک سری از انیمیشن ها رو که توسط افتر افکت ساخته میشه پیاده سازی کنیم

# Dynamic sizes  :
همه سایزها رو تا 4k ساپورت میکنه

# read more text view :
از اسمش مشخصه چیکار میکنه

نکته خیلی مهم سینک شدن پروژه:
حتما حتما یادتون باشه
 مخازن مورد نیاز رو در settings.gradle توی dependencyResolutionManagement اضافه کنید.
مخصوصا برای کتابخونه dynamic sizes

معرفی api های استفاده شده در پروژه------------------------------------------------------------------
spoonacular.com
سایت بسیار خوب و مرجع برای دستور پخت انواع غذاهای مختلف
برای استفاده از api ها به صورت رایگان باید ثبت نام کنید توی سایت
https://spoonacular.com/food-api/console#Dashboard
با api key که میده تا 150 ریکوعست در روز رایگانه
که توی داشبوردتون میتونید خیلی راحت آمارتون رو ببینید

5ace23b237e0430590fc4f8f8f0cfc66

آیکون های پروژه-------------------------------------------------------------------------------------
http://fontawesome.com/
نسخه رایگانش هیچی نداره. پولیش رو از soft98 دانلود کنید
آخرین نسخه 6.1.1 هست
بعدش خیلی راحت به پک آیکون هاش دسترسی دارید

رنگ های پروژه---------------------------------------------------------------------------------------
http://colorhunt.co/
از این سایت میتونید پلت رنگ انتخاب کنید

برای اسم رنگ ها به این سایت برید
https://www.color-name.com/

برای انیمیشن های پروژه------------------------------------------------------------------------------
https://lottiefiles.com/
هر انیمیشنی رو که خواستید سرچ کنید
و میتونید طیف رنگیش رو کاستومایز کنید
موقع دانلود انیمیشن فرمت های مختلف مثل گیف و mp4 رو پیشنهاد میده
شما باید lottieJson رو انتخاب کنید
حجم خیلی کمی هم داره این فرمت نسبت به بقیه
و همون طور که میدونید gif کلا فرمت نسبتا سنگینیه و فشار میاره به موبایل
ولی lottieJson خیلی سبک و خوبه

ساخت پس زمینه صفحه اسپلش----------------------------------------------------------------------------
https://www.flaticon.com/pattern
یک سایت بی نهایت بزرگ برای دانلود آیکون و اینجور چیزاس
کلمه مورد نظرتون رو اینجا سرچ کنید و منتظر شید آیکون ها رو لود کنه
هر تعداد آیکون رو که خواستید انتخاب کنید و پترنش رو میسازه
حتی میتونید ببرنید رندوم بسازه
یا درگ اند دراپ خیلی راحته
در نهایت یک خروجی png بگیرید
البته با هر فرمتی بخواید میده ولی شما png بگیرید
بعد سایزش رو انتخاب کنید
ما با سایز زیر دانلود کردیم برای صفحه اسپلش
1080 x 1920

نکات طراحی:-----------------------------------------------------------------------------------------
استفاده از ویوهای سری متریال material views #
مثلا متریال باتن آپشن های بیشتری از باتن معمولی دارد مثل گرد کردن و استروک دادن بهش

# tint
هر زمان از tint توی هر ویویی خواستید استفاده کنید حواستون باشه از app استفاده کنید نه android
چرا؟
چون اگه از اندروید استفاده کنید توی بعضی از اندرویدها مخصوصا اندرویدهای زیر ۵ اعمال نمیشه

# material button default padding
اگه دقت کنید متریال باتن رو همون اول که میارید یک فاصله ای اطرافش داره
به خاطر افکت تو رفتنش موقع فشار دادن این حالت رو داره
برای حذف این حالت از ویژگی inset استتفاده کنید که چهار جهت داره
مقدار 0dp را بدید بهش حذف میشه

# ImageView
برای سایز عکس چیکار کنیم؟
یه راهش استفاده از scaleType هاست که محبوب ترینش centerCrop عه
ولی اینا میتونن تحت شرایطی جزییات عکس ما رو نابود کنن
مثلا دور عکس رو ببرن
یک راه دیگه استفاده از aspect ratio است
که اینم راه خوبیه
یک راه سوم هم وجود داره اونم اینکه
من بیام عرض رو بهش بدم
بگم کل عرضی که بهت میدم رو در نظر بگیر
بعد طولت رو هرچقدر نیاز داری کش بده نسبت به این عرض
اگه wrap content بدیم ممکنه بپکونه ui را
مثلا بی دلیل تمام صفحه شه.
برای این کار یک اتریبیوتی داریم به نام
android:adjustViewBounds="true"
میاد فضای اضافه رو حذف میکنه که ویو خودش رو الکی پهن نکنه
به صورت دیفالت false است

#TextInputLayout
یکی از ویوهای متریال است که با TextInputEditText جفت خیلی خوبی میشن
برای استروک دورش اگه box رو سرچ کنید انواع آپشن هاشو میاره
برای اینکه دورش حالت باکس باشه باید از استایل OutlinedBox ارث بری کنه
استایل های دیگه هم داره مثل filledBox
حواستون باشه استایلی که میدید بهش از MaterialComponents باشه نه material3

# style نکته استایل نویسی
اگر nameSpace مورد نظر شما app باشه نیازی نیست بهش اشاره بشه
ولی اگه اندروید باشه موقع استایل نوشتن باید ذکر شه گاهی
مثلا توی مارجین اینجوره
البته نیازی نیست ما به این nameSpace ها توجهی کنیم و خودش میاره.
صرفا برا اینکه علت این تفاوت رو بدونیم.

# image loading نکته لود شدن عکس
توی عکس کاور صفحه رجیستر یک عکس داریم که  رزولیشین بالایی دارد
به همین علت ممکنه لود ui ما رو کمی سنگین کنه چون رندر شدنش طول میکشه
راه حل چیه؟
زمانی که چنین تصاویر بزرگی داریم
با اینکه داریم از ریسورس های خود پروژه میخونیم
بیایم از کتابخونه های لود تصویر مثل پیکاسو - کویل - گلاید استفاده کنیم
بهترین گزینه در درجه اول کویل بعد گلاید و بعد پیکاسو هستن
فشار رو خیلی از روی سخت افزار بر میدارن موقع رندر عکس
کویل میاد این عملیات رو روی ترد بک گراند انجام میده که ui ما هم کند و فریز نمیشه در نتیجه

کلا کویل و گلاید خیلی آپشن های بیشتری دارن

آموزش اضافه کردن فونت به کل پروژه توسط Calligraphy--------------------------------------------------
نمیخوایم فونت رو دیگه به صورت دستی یا استایل روی اپ ست کنیم
برای دریافت این لایبرری به صفحه گیت هابش برید
حتما حتما حتما وارد نسخه ۳ کتابخونه بشید
نسخه ۲ دیگه از اندروید ۲۹ به بعد ساپورت نمیشه و کرش میکنه
https://github.com/InflationX/Calligraphy

1 - add library (gradle)
دو تا خط implementation داره که به گریدل اضافه میشه
و دو تا روش استفاده:
برای اینکه روی یک ویوی خاص فونت ست کنیم اتریبیوت xml ی داره
مثلا میخوایم یک ویوی خاص به طور خاص فونت بولد داشته باشه
یا کد کاتلینی برای کل پروژه

2- application class
برای استفاده ازش باید یک کلاس اپلیکیشن درست کنیم و توی متد onCreate ش یک سری کد قرار بدیم
چند تا روش ارايه میکنه برای اینکه فونت رو بدیم به بیلدرش
ما میخوایم به این روش استفاده کنیم
.setDefaultFontPath("fonts/atlas_regular.ttf")
ولی شما هر چقدر توی پروژه بگردید دارکتوری ای به اسم فونتس پیدا نمی کنید
اونی هم که تو ریسورس ها میسازیم اسمش فونته نه فونتس
پس این کجاس؟
نکته اول: این fonts صرفا یک اسمیه که خودمون گذاشتیم
از دیفالت های پروژه نیست یعنی و میتونست هر اسم دلخواه دیگه باشه
ولی این پوشه رو کجا بسازم؟
من که نمیتونم بیام توی res پوشه با اسم دلخواه بسازم
تمام پوشه هاش پوشه های از پیش تعیین شده خود اندرویده

جواب:
اینا دسترسی پیدا میکنن به پوشه Assets شما
پوشه assets از اون پوشه هاییه که به صورت پیش فرض فعال نیست و باید خودمون فعالش کنیم
ما توی استس میتونیم فایل های جانبیمون رو قرار بدیم
مثلا فونت ها
یا مثلا دیدید گاهی روی یک دکمه ای میزنید یک صدایی در میاره اون اپلیکیشنه
یا نوتیفیکیشن اپ با یک صدای خاصی پاپ میشه
این چیزا اکثرا توی است قرار میگیره

project root -> R click -> new folder -> assetsFolder -> sync project
یک فولدر جدید بالای res ایجاد میشه. نه توی res

حالا که assets رو داریم دستمون برای پوشه بندی توش بازه
و پیشنهاد میشه فایل ها رو به صورت پوشه بندی داخلش بذارید

سایت های زیادی برای دانلود فونت وجود داره مثل 1001fonts

اون فونتی که میخواید به صورت عمومی روی همه ویوها اعمال شه رو توی کلاس اپلیکیشن قرار بدید
طبیعتا باید کلاس اپلیکیشن رو در مانیفست معرفی کنید

3- inject into context
باید کدهایی که توی کلاس اپلیکیشن نوشتیم رو تزریق کنیم به کانتکس اصلی پروژه
منظور ما اینجا از تزریق di و هیلت و اینا نیستا
میاد اینو وارد کل کانتکس اپلیکیشن ما میکنه
کد زیر حتما باید توی یک اکتیویتی قرار بگیرد.
@Override
protected void attachBaseContext(Context newBase) {
    super.attachBaseContext(ViewPumpContextWrapper.wrap(newBase));
}
وقتی این کد رو میبریم داخل مین اکتیویتی این به کانتکس این اکتیویتی تزریق میشه
و هر فرگمنتی که توی این اکتیویتی لود شه هم این فونت روش اعمال میشه
ما هم سینگل اکتیویتی هستیم
خب این روی تمام صفحات ما ناخوداگاه اعمال میشه

4- Base Activity
اگه چندین اکتویتی توی یک پروژه داشتیم چی؟
کپی پیست این کد توی چندین اکتیویتی آزاردهنده س
میایم توی پوشه utils یک کلاس درست میکنیم به اسم BaseActivity
و از AppCompatActivity ارث بری میکنیم که خواص اکتیویتی رو داشته باشه
اون کده رو کات میکنیم میاریم اینجا قرار میدیم
توی مین اکتویتی به جای AppCompatActivity از BaseActivity ارث بری میکنیم
و چون BaseActivity از AppCompatActivity ارث بری کرده اوکی میشه

فونت ما روی همه ویوها اعمال میشه به جز تب لایوت که اونم تو نت سرچ کنید اوکی میشه میاره راه حلشو

پیاده سازی تزریق وابستگی مربوط به اینترنت-----------------------------------------------------------
بیش از ۹۵٪ پروژه های اندرویدی برای ارتباط با سرور از رتروفیت استفاده میکنن

به منظور تامین وابستگی های نتورک یک فایلی میسازیم به اسم NetworkProviders
این فایل رو از نوع آبجکت میسازیم
چرا آبجکت؟
گزینه های زیاد و متنوعی داریم وقتی new رو میزنیم

#File
مثلا میشه فایل ساخت
از فایل برای نگهداری constant های اپ میشه استفاده کرد
با برای اکستنشن فانکشن ها
یک چیز کلیه
همه چیز رو میشه داخلش قرار بدی

#Object
از طرفی کاتلین اومده موارد مختلفی رو هم به صورت مجزا در نظر گرفته
کلاس - اینترفیس - آبجکت - ...
زمانی که از آبجکت استفاده میکنیم دسترسی هامون نسبت به زمانی که فایل میسازیم کمتره
اکثرا زمانی از آبجکت استفاده میکنیم که
برای تعریف کانستنت ها یا فانکشن ها استفاده میشه
یکم مرتب تر و دسته بندی شده تر در میاره کارو

موقع استفاده اگه مثلا BASE_URL رو داخل Constants که آبجکت است تعریف کردیم
میتونیم به شکل Constants.BASE_URL استفاده کنیم که نیازی به ایمپورت نداره
یا بیایم به صورت BASE_URL خالی بنویسیم و اون Constants را ایمپورت کنیم
در عمل جفتش یکیه

بعد میایم موارد مربوط به تزریق وابستگی رو پیاده میکنیم
@Module
مشخص میکنه این فایل یک ماژوله
@InstallIn(SingletonComponent::class)
محدوده فعالیت این ماژول را تعیین میکنه
این ماژول من به ازای هر فرگمنت ساخته بشه؟
به ازای هر اکتیویتی ساخته بشه؟
یا یک بار در طول اجرای اپلیکیشن من؟

خی گفتیم تنظیمات رتروفیت بزرگ و سنگینن
و درست نیست که به ازای هر فرگمنت که داره ساخته میشه من یک بار این تنظیمات سنگین رو از اول بسازم
موارد نتورک و دیتابیس سنگینن و حتما باید به صورت سینگل تون تعریف شن

@Provides
گفتیم هر کدوم از اینا که داخل ماژول تعریف میشن
که میخوایم وابستگی هاشو نسبت به هم مشخص کنیم در قالب پرواید تامین و استفاده میکنیم
@Singleton
علاوه بر اون میتونیم برای این فانکشنی که داریم تعریف میکنیم بگیم که سینگلتون باشه یا نباشه

# Retrofit :
موقع تامین وابستگی رتروفیت اگه BASE_URL را تو ورودی ندیم هم میشناسه ها
ولی داریم از تزریق وابستگی استفاده میکنیم کارو باید اصولی پیش برد

ورودی دومش جیسونه
که اگه برید توش میبینید دو تا سازنده داره
اولیش هیچ ورودی ای نمیگیره از شما و دومی یک ورودی gson داره
پس باید جیسون رو تامین کنیم

یک آیتم آپشنال توی رتروفیت تنظیمات کلاینت بود
مثلا رید و رایت چقدر طول بکشه
به صورت پیش فرض ده ثانیه است که خب اصلا چیز درستی نیست
یا برای ست کردن اینترسپتورها نیاز داریم به این
مثل لاگینگ اینترسپتور
باید از okHttpClient استفاده کنیم برای این کارا

پیاده سازی کلاس چک کردن اینترنت----------------------------------------------------------------------
روشی که توی این برنامه اینترنت رو چک میکنیم شباهتای زیادی به روش های قبلی مخصوصا MVI داره ولی همون نیست
بیشتر ترکییبیه از MVVM و MVI

liveData :
https://github.com/Ghazal-Jamalzadeh/DiffUtils/blob/74-Koin/app/livedata/src/main/java/com/jmzd/ghazal/livedata/network/CheckConnection.kt

MVVM:
https://github.com/Ghazal-Jamalzadeh/FoodAppMVVM/blob/master/app/src/main/java/com/jmzd/ghazal/foodappmvvm/utils/CheckConnection.kt

MVI:
https://github.com/Ghazal-Jamalzadeh/FoodAppMVI/blob/master/app/src/main/java/com/jmzd/ghazal/foodappmvi/utils/network/NetworkConnectivity.kt

خب مثل قل میایم از : ConnectivityManager.NetworkCallback ارث بری میکنیم توی این کلاس
که از طریقش میخوایم به وضعیت های اینترنت دسترسی داشته باشیم
برای بیان وضعیت اینترنت یک بولین تعریف میکنیم
چون اینترنت یا وصله یا نیست دیگه...
حالت وسطی نداره
از نوع MutableStateFlow در نظر میگیریم که تقریا معادل همون لایو دیتاست
مقدار دیفالت فالس رو براش در نظر میگیریم

خب حالا برای نوشتن دستوراتمون نیاز به فانکشن داریم
وسط کلاس که نمیشه کد زد... این دانش کاتلینیه
این فانکشن رو اسمش رو میذاریم checkNetworkAvailability و باید پابلیک باشه
چون از همه جای اپ از طریق این فانکشن قراره وضعیت اینترنت رو به دست بیاریم
خروجیش قراره یک MutableStateFlow از نوع بولین باشه

#ConnectivityManager
اگه خاطرتون باشه گقتیم ما یک کلاسی داریم به اسم کانکتیویتی منیجر
داخل این کلاس کانکتیویتی منیجر من میتونم این منیجر مربوط به اینترنت رو داشته باشم
که برم ببینم از کدوم سرویس های اینترنت باید استفاده کنم
که بینم اینترنت توی اون دستگاه وجود داره یا نه
پس وابستگی اول این کلاس مشخص شد برای ما

provideCM
کدش مشابه کد MVI است
همونطور که احتمالا یادتونه گقتیم برای دسترسی به این  کانکتیویتی سرویس نیاز به کانتکس داشتیم
از این طریق میتونیم به سرویس های خود اندروید دسترسی داشته باشیم
بعد با استفاده از کلاس کانتکس میگیم کدوم سرویس رو میخوایم
اندروید سرویس های خیلی زیاد و متنوعی برای صدا دوربین باتری و... دارد

خب بعد تعریف کانکتیویتی منیجر میایم رجیسترش میکنیم
registerNetworkCallback
در اصل وصلش میکنیم به اونجایی که مد نظرمون هس
میخوایم بگیم بیا به فلان کال بک وصل شو

ورودی اولی که از ما میخواد نتورک ریکوعسته
و ورودی دومش نتورک کال بک که تو کلاس ازش ارث بری کردیم و میشه this

provideNR
کدش کمی از MVI مفصل تر است
و اندرویدهای مختلف رو ساپورت کردیم
توی اندروید های بالای P اجازه نداریم مثلا اینو توی بک گراند چک کنیم و باید توی فورگراند باشه
کلا توی اندرویدهای جدید سرویس ها خیلی محدود شدن

خب بعد از تامین وابستگی ها میایم سراغ ادامه کدهامون
اینجا باز باید برای اندرویدهای مختلف کدهای مختلفی بزنیم
اندروید بالای M و زیر M فرق دارن

//Active network
میخوایم اون نتورک هایی که اکتیو هستن رو به کمک منیجر بگیرم
اگه نال بود یعنی هیچ نتورکی وصل نیست و فالس رو میفرستیم
چه زمانی این اتفاق می افته؟
مثلا مشکل سخت افزاری

//Capability
در غیر این صورت اگه اکتیوی وجود داشت
بیا ببین وای فایه سلولاره چیه؟
هر کدومو دیدی ترو بفرست

در نهایت برای اندرویدهای پایین هم کدشو مینویسیم
که مقداری از کد دپریکیت شده
و تو جلسات قبل از این روش استفاده کرده بودیم

onAvailable & onLost :
گفتیم زمانی که از اینا استفاده میکنیم دو تا فانکشن دیگه هم داریم
که باید اورراید شن
اینا رو هم مینویسیم
